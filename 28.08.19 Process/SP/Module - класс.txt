Module - класс
 
Выполняет отражение для модуля.
Пространство имен:   System.Reflection

Иерархия наследования
System.Object
System.Reflection.Module
System.Reflection.Emit.ModuleBuilder

Синтаксис
[SerializableAttribute]
[ClassInterfaceAttribute(ClassInterfaceType.None)]
[ComVisibleAttribute(true)]
[PermissionSetAttribute(SecurityAction.InheritanceDemand, Unrestricted = true)]
public abstract class Module : _Module, ISerializable, ICustomAttributeProvider

Конструкторы
 Module()	Инициализирует новый экземпляр класса Module.

Свойства
 Assembly	Возвращает соответствующую сборку Assembly для данного экземпляра Module.
 CustomAttributes	Получает коллекцию, содержащая пользовательские атрибуты этого модуля.
 FullyQualifiedName	Возвращает строку, содержащую полное имя и путь к этому модулю.
 MDStreamVersion	Возвращает версию потока метаданных.
 MetadataToken	Возвращает токен, который определяет модуль в метаданных.
 ModuleHandle	Возвращает дескриптор модуля.
 ModuleVersionId	Возвращает UUID, который можно использовать для различения двух версий модуля.
 Name	Возвращает строку String, представляющую имя модуля без пути.
 ScopeName	Возвращает строку, представляющую имя модуля.

Методы
 Equals(Object)	Определяет, равны ли этот модуль и заданный объект.(Переопределяет Object.Equals(Object).)
 Finalize()	Позволяет объекту попытаться освободить ресурсы и выполнить другие операции по очистке перед тем, как объект будет утилизирован сборщиком мусора. (Наследуется от Object.)
 FindTypes(TypeFilter, Object)	Возвращает массив классов, удовлетворяющих данному фильтру и критериям фильтра.
 GetCustomAttributes(Boolean)	Возвращает все настраиваемые атрибуты.
 GetCustomAttributes(Type, Boolean)	Возвращает настраиваемые атрибуты заданного типа.
 GetCustomAttributesData()	Возвращает список объектов CustomAttributeData для текущего модуля, который можно использовать в контексте, предназначенном только для отражения.
 GetField(String)	Возвращает поле, имеющее заданное имя.
 GetField(String, BindingFlags)	Возвращает поле, имеющее заданное имя и атрибуты привязки.
 GetFields()	Возвращает глобальные поля, определенные в модуле.
 GetFields(BindingFlags)	Возвращает определенные в модуле глобальные поля, которые соответствуют заданным флагам привязки.
 GetHashCode()	Возвращает хэш-код для текущего экземпляра. (Переопределяет Object.GetHashCode().)
 GetMethod(String)	Возвращает метод, имеющий заданное имя.
 GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])	Возвращает метод, имеющий заданное имя, сведения о привязке, соглашение о вызовах, а также типы и модификаторы параметров.
 GetMethod(String, Type[])	Возвращает метод, имеющий заданное имя и типы параметров.
 GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])	Возвращает реализацию метода в соответствии с заданными критериями.
 GetMethods()	Возвращает глобальные методы, определенные в этом модуле.
 GetMethods(BindingFlags)	Возвращает определенные в модуле глобальные методы, которые соответствуют заданным флагам привязки.
 GetObjectData(SerializationInfo, StreamingContext)	Обеспечивает реализацию класса ISerializable для сериализованных объектов.
 GetPEKind(PortableExecutableKinds, ImageFileMachine)	Возвращает пару значений, определяющих природу кода в модуле и платформе, на которой применяется этот модуль.
 GetSignerCertificate()	Возвращает объект X509Certificate, соответствующий сертификату, включаемому в подпись Authenticode сборки, которой принадлежит этот модуль.Если сборка не имеет подписи Authenticode, возвращается значение null.
 GetType()	Возвращает объект класса Type для текущего экземпляра. (Наследуется от Object.)
 GetType(String)	Возвращает заданный тип в результате поиска с учетом регистра.
 GetType(String, Boolean)	Возвращает заданный тип, выполняя поиск в модуле с учетом регистра.
 GetType(String, Boolean, Boolean)	Возвращает указанный тип, определяя, следует ли учитывать регистр при поиске модуля и должно ли создаваться исключение, если не удалось обнаружить этот тип.
 GetTypes()	Возвращаются все типы, определенные в данном модуле.
 IsDefined(Type, Boolean)	Возвращает значение, обозначающее, применен ли к этому модулю указанный тип атрибутов.
 IsResource()	Возвращает значение, указывающее, является ли объект ресурсом.
 MemberwiseClone()	Создает "поверхностную" копию текущего объекта. (Наследуется от Object.)
 ResolveField(Int32)	Возвращает поле, определенное заданным токеном метаданных.
 ResolveField(Int32, Type[], Type[])	Возвращает поле, определенное заданным токеном метаданных, в контексте, определенном заданными параметрами универсального типа.
 ResolveMember(Int32)	Возвращает тип члена, определенный заданным токеном метаданных.
 ResolveMember(Int32, Type[], Type[])	Возвращает тип или член, которые определены заданным токеном метаданных, в контексте, определенном заданными параметрами универсального типа.
 ResolveMethod(Int32)	Возвращает метод или конструктор, определенный заданным токеном метаданных.
 ResolveMethod(Int32, Type[], Type[])	Возвращает метод или конструктор, определенный заданным маркером метаданных, в контексте, определенном заданными параметрами универсального типа.
 ResolveSignature(Int32)	Возвращает большой двоичный объект подписи, определенный токеном метаданных.
 ResolveString(Int32)	Возвращает строку, определенную заданным маркером метаданных.
 ResolveType(Int32)	Возвращает тип, определенный заданным токеном метаданных.
 ResolveType(Int32, Type[], Type[])	Возвращает тип, определенный заданным токеном метаданных, в контексте, определенном заданными параметрами универсального типа.
 ToString()	Возвращает имя модуля.(Переопределяет Object.ToString().)

Поля
 FilterTypeName	Объект TypeFilter фильтрует список типов, определенных в этом модуле, на основе оценки имен.Это поле чувствительно к регистру и доступно только для чтения.
 FilterTypeNameIgnoreCase	Объект TypeFilter фильтрует список типов, определенных в этом модуле, на основе оценки имен.Это поле нечувствительно к регистру и доступно только для чтения.

Заметки
Модуль представляет собой переносимый исполняемый файл типа DLL или EXE, состоящий из одного или нескольких классов и интерфейсов.В отдельном модуле может быть несколько пространств имен, а одно пространство имен может охватывать несколько модулей.
Один или несколько модулей, развертываемые как единое целое, образуют сборку.