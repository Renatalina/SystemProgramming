Конструкторы
	Thread(ParameterizedThreadStart)	Инициализирует новый экземпляр класса Thread при этом указывается делегат, позволяющий объекту быть переданным в поток при запуске потока.
	Thread(ThreadStart)	Инициализирует новый экземпляр класса Thread.
	Thread(ParameterizedThreadStart, Int32)	Инициализирует новый экземпляр класса Thread при этом указывается делегат, позволяющий объекту быть переданным в поток при запуске потока с указанием максимального размера стека для потока.
	Thread(ThreadStart, Int32)	Инициализирует новый экземпляр класса Thread, указывая максимальный размер стека для потока.

Методы
	Abort()	Вызывает исключение ThreadAbortException в вызвавшем его потоке для того, чтобы начать процесс завершения потока.Вызов данного метода обычно завершает поток.
	Abort(Object)	Вызывает исключение ThreadAbortException в вызвавшем его потоке для того, чтобы начать процесс завершения потока, в то же время предоставляя информацию о завершении потока, касательно исключения.Вызов данного метода обычно завершает поток.
	AllocateDataSlot	Выделяет неименованную область данных всем потокам.Для улучшения производительности используйте поля, отмеченные атрибутом ThreadStaticAttribute.
	AllocateNamedDataSlot	Выделяет именованную область данных всем потокам.Для улучшения производительности используйте поля, отмеченные атрибутом ThreadStaticAttribute.
	BeginCriticalRegion	Уведомляет хост, что выполнение близится ко входу к область кода, в которой эффекты прерывания выполнения или неуправляемого выполнения могут повлиять на другие задачи в домене приложения.
	BeginThreadAffinity	Уведомляет хост, что управляемый код близок к выполнению инструкций, зависящих от идентификации текущего потока операционной системы.
	DisableComObjectEagerCleanup	Отключает автоматическую очистку вызываемых оболочек времени выполнения (RCW) для текущего потока. 
	EndCriticalRegion	Уведомляет хост, что выполнение близится ко входу к область кода, в которой эффекты прерывания выполнения или неуправляемой ошибки ограничены текущей задачей.
	EndThreadAffinity	Уведомляет хост об окончании выполнения кодом инструкций, которые зависят от идентификатора текущего потока в операционной системе.
	Equals(Object)	Определяет, равен ли заданный объект Object текущему объекту Object. (Унаследовано от Object.)
	Finalize	Освобождает все ресурсы, используемые классом CriticalFinalizerObject. (Унаследовано от CriticalFinalizerObject.)
	Finalize	Позволяет объекту Object попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как объект Object будет утилизирован в процессе сборки мусора. (Унаследовано от Object.)
	FreeNamedDataSlot	Удаляет связь между названием и областью для всех потоков в процессе.Для улучшения производительности используйте поля, отмеченные атрибутом ThreadStaticAttribute.
	GetApartmentState	Возвращает значение типа ApartmentState, показывающее состояние апартамента.
	GetCompressedStack	Устаревшее. Возвращает объект CompressedStack, который может быть использован для отслеживания стека текущего потока. 
	GetData	Извлекает значение из заданной области текущего потока, внутри текущей области текущего потока.Для улучшения производительности используйте поля, отмеченные атрибутом ThreadStaticAttribute.
	GetDomain	Возвращает текущую область, в которой выполняется текущий поток.
	GetDomainID	Возвращает уникальный идентификатор домена приложения.
	GetHashCode	Возвращает хэш-код текущего потока. (Переопределяет Object.GetHashCode().)
	GetHashCode	Играет роль хэш-функции для определенного типа. (Унаследовано от Object.)
	GetNamedDataSlot	Ищет именованную область данных.Для улучшения производительности используйте поля, отмеченные атрибутом ThreadStaticAttribute.
	GetType	Возвращает объект Type для текущего экземпляра. (Унаследовано от Object.)
	Interrupt	Прерывает работу потока, находящегося в состоянии WaitSleepJoin.
	Join()	Блокирует вызывающий поток до завершения потока, продолжая отправлять стандартные сообщения COM и SendMessage.
	Join(Int32)	Блокирует вызывающий поток до завершения потока или истечения указанного времени, продолжая отправлять стандартные сообщения COM и SendMessage.
	Join(TimeSpan)	Блокирует вызывающий поток до завершения потока или истечения указанного времени, продолжая отправлять стандартные сообщения COM и SendMessage.
	MemberwiseClone	Создает неполную копию текущего объекта Object. (Унаследовано от Object.)
	MemoryBarrier	Синхронизирует доступ к памяти следующим образом: процессор, выполняющий текущий поток, не способен упорядочить инструкции в порядке обращения к памяти, до вызова MemoryBarrier выполняет после того, как память получит доступ после вызова MemoryBarrier.
	ResetAbort	Отменяет метод Abort, запрошенный для текущего потока.
	Resume	Устаревшее. Возобновляет приостановленную работу потока.
	SetApartmentState	Задает состояние апартамента потока до его запуска.
	SetCompressedStack	Устаревшее. Применяет записанное значение CompressedStack к текущему потоку. 
	SetData	Задает данные в указанной области для текущей области потока, выполняющегося в данный момент.Для улучшения производительности используйте поля, отмеченные атрибутом ThreadStaticAttribute.
	SetProcessorAffinity	В .NET Compact Framework для Xbox 360, задает сходство процессоров для управляемого потока.Сходство процессоров определяет процессоры, на которых будет выполнен поток.
	Sleep(Int32)	Приостанавливает работу текущего потока на заданное время.
	Sleep(TimeSpan)	Блокирует текущий поток на заданное время.
	SpinWait	Вынуждает поток ожидать количество отсчетов, определенное параметром iterations.
	Start()	Вынуждает операционную систему изменить состояние текущего экземпляра на ThreadState.Running.
	Start(Object)	Заставляет операционную систему изменить состояние текущего экземпляра на ThreadState.Running, а также (необязательно) передает объект с данными, используемыми методом в потоке.
	Suspend	Устаревшее. Приостанавливает работу потока; если работа потока уже приостановлена, не оказывает влияния.
	ToString	Возвращает объект String, который представляет текущий объект Object. (Унаследовано от Object.)
	TrySetApartmentState	Задает состояние апартамента потока до его запуска.
	VolatileRead(Byte)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileRead(Double)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileRead(Int16)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileRead(Int32)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileRead(Int64)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileRead(IntPtr)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileRead(Object)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileRead(SByte)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileRead(Single)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileRead(UInt16)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileRead(UInt32)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileRead(UInt64)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileRead(UIntPtr)	Считывает значение поля.Это значение является последним, записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.
	VolatileWrite(Byte, Byte)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	VolatileWrite(Double, Double)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	VolatileWrite(Int16, Int16)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	VolatileWrite(Int32, Int32)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	VolatileWrite(Int64, Int64)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	VolatileWrite(IntPtr, IntPtr)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	VolatileWrite(Object, Object)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	VolatileWrite(SByte, SByte)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	VolatileWrite(Single, Single)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	VolatileWrite(UInt16, UInt16)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	VolatileWrite(UInt32, UInt32)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	VolatileWrite(UInt64, UInt64)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	VolatileWrite(UIntPtr, UIntPtr)	Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.
	Yield	Заставляет вызвавший поток передать выполнение другому потоку, готовому к использованию на текущем процессоре.Операционная система выбирает, какому потоку передается выполнение.

Свойства
	ApartmentState	Устаревшее. Получает или задает состояние апартамента для данного потока.
	CurrentContext	Возвращает текущий контекст, в котором выполняется поток.
	CurrentCulture	Получает или задает язык и региональные параметры для текущего потока.
	CurrentPrincipal	Получает или задает текущего участника потока (для безопасности на основе ролей).
	CurrentThread	Возвращает выполняющийся в данный момент поток.
	CurrentUICulture	Получает или задает текущие язык и региональные параметры, используемые диспетчером ресурсов для поиска ресурсов, связанных с языком и региональными параметрами, во время выполнения.
	ExecutionContext	Возвращает объект ExecutionContext, содержащий сведения о различных контекстах текущего потока. 
	IsAlive	Возвращает значение, показывающее статус выполнения текущего потока.
	IsBackground	Получает или задает значение, показывающее, является ли поток фоновым.
	IsThreadPoolThread	Возвращает значение, показывающее, принадлежит ли поток к группе управляемых потоков.
	ManagedThreadId	Возвращает уникальный идентификатор текущего управляемого потока.
	Name	Получает или задает имя потока.
	Priority	Получает или задает значение, указывающее на планируемый приоритет потока.
	ThreadState	Возвращает значение, содержащее состояния текущего потока.

В начало страницы
Явные реализации интерфейса
  	Имя	Описание
	_Thread.GetIDsOfNames	Сопоставляет набор имен с соответствующим набором идентификаторов диспетчеризации.
	_Thread.GetTypeInfo	Возвращает сведения о типе объекта, который может затем использоваться для получения сведений о типе интерфейса.
	_Thread.GetTypeInfoCount	Возвращает количество предоставляемых объектом интерфейсов для доступа к сведениям о типе (0 или 1).
	_Thread.Invoke	Предоставляет доступ к открытым свойствам и методам объекта.