Классы
  	Класс	Описание
	AbandonedMutexException	Исключение вызывается, когда некоторый поток получает объект Mutex, брошенный другим потоком путем выхода без высвобождения.
	AutoResetEvent	Уведомляет ожидающий поток о том, что произошло событие.Этот класс не может наследоваться.
	Barrier	Позволяет нескольким задачам параллельно работать с алгоритмом, используя несколько фаз.
	BarrierPostPhaseException	Исключение, которое возникает при сбое действия барьера Barrier, выполняемого в конце фазы
	CancellationTokenSource	Отправляет токену CancellationToken сигнал для отмены.
	CompressedStack	Обеспечивает методы для установки и инициализации сжатого стека в текущем потоке.Этот класс не может быть наследован.
	CountdownEvent	Представляет примитив синхронизации, на который отправляется сигнал при достижении его подсчетом нуля.
	EventWaitHandle	Представляет синхронизированное событие потока.
	ExecutionContext	Управляет контекстом выполнения текущего потока.Данный класс не может наследоваться.
	HostExecutionContext	Инкапсулирует и распространяет контекст выполнения хоста по потокам. 
	HostExecutionContextManager	Обеспечивает функциональность, позволяющие хосту общеязыковой среды выполнения участвовать в перемещении или миграции контекста выполнения.
	Interlocked	Предоставляет атомарные операции для переменных, общедоступных нескольким потокам. 
	LazyInitializer	Обеспечивает процедуры неактивной инициализации.
	LockRecursionException	Исключение генерируется, когда рекурсивная запись блокировки не совпадает с рекурсивной политикой блокировки.
	ManualResetEvent	Уведомляет один или более ожидающих потоков о том, что произошло событие.Этот класс не может наследоваться.
	ManualResetEventSlim	Предоставляет уменьшенную версию ManualResetEvent.
	Monitor	Предоставляет механизм для синхронизации доступа к объектам.
	Mutex	Примитив синхронизации, который также может использоваться в межпроцессорной синхронизации. 
	Overlapped	Обеспечивает управляемое представление Win32 структуры OVERLAPPED, включая методы перемещения информации из экземпляра Overlapped в структуру NativeOverlapped.
	ReaderWriterLock	Определяет блокировку, которая поддерживает один пишущий поток и несколько читающих. 
	ReaderWriterLockSlim	Представляет блокировку, используемую для управления доступом к ресурсу, которая позволяет нескольким потокам производить считывание или получать монопольный доступ на запись.
	RegisteredWaitHandle	Представляет дескриптор, который регистрируется при вызове метода RegisterWaitForSingleObject.Данный класс не может наследоваться.
	Semaphore	Ограничивает число потоков, которые могут одновременно получать доступ к ресурсу или пулу ресурсов. 
	SemaphoreFullException	Исключение, выдаваемое при вызове метода Semaphore.Release для семафора, значение счетчика которого уже равно максимальному. 
	SemaphoreSlim	Упрощенная альтернатива семафору Semaphore, ограничивающая количество потоков, которые могут параллельно обращаться к ресурсу или пулу ресурсов.
	SynchronizationContext	Обеспечивает базовую функциональность для распространения контекста синхронизации в различных моделях синхронизации. 
	SynchronizationLockException	Исключение, которое выдается в то время, когда методу требуется вызвавший его объект для получения блокировки данного Monitor, а метод вызван объектом, не являющимся владельцем блокировки.
	Thread	Создает и контролирует поток, задает приоритет и возвращает статус.
	ThreadAbortException	Исключение, выдаваемое при вызове метода Abort.Этот класс не может наследоваться.
	ThreadExceptionEventArgs	Предоставляет данные для события ThreadException.
	ThreadInterruptedException	Исключение, которое выдается при прерывании работы потока Thread, находящегося в состоянии ожидания.
	ThreadLocal<T>	Предоставляет хранилище для данных, локальных для потока.
	ThreadPool	Предоставляет пул потоков, который может использоваться для создания рабочих элементов, обработки асинхронного ввода/вывода, ожидания от имени других потоков и обработки таймеров.
	ThreadStartException	Исключение выдается, когда происходит сбой в управляемом потоке после запуска базового потока операционной системы, но до готовности потока к выполнению кода пользователя.
	ThreadStateException	Исключение, которое выдается, когда объект Thread является неправильным свойством ThreadState для вызова метода.
	Timeout	Содержит константу, которая используется для задания неограниченного количества времени.Данный класс не может наследоваться.
	Timer	Предоставляет механизм для выполнения метода в заданные интервалы времени.Этот класс не может наследоваться.
	WaitHandle	Инкапсулирует связанные с операционной системой объекты, ожидающие монопольного доступа к общим ресурсам.
	WaitHandleCannotBeOpenedException	Исключение, которое выдается при попытке открыть не существующий в системе семафор или мьютекс.

Структуры
  	Структура	Описание
	AsyncFlowControl	Обеспечивает функциональность для восстановления миграции или перемещения контекста выполнения между потоками. 
	CancellationToken	Распространяет уведомление, что операции следует отменить.
	CancellationTokenRegistration	Представляет делегат обратного вызова, зарегистрированный с объектом CancellationToken. 
	LockCookie	Определяет блокировку, которая реализует семантику "один записывающий / много читающих".Это тип значения.
	NativeOverlapped	Содержит явное представление, видимое из неуправляемого кода, и которое имеет то же представление, что и структура Win32 OVERLAPPED с дополнительными зарезервированными полями в конце.
	SpinLock	Предоставляет примитив взаимно исключающей блокировки, в котором поток, пытающийся получить блокировку, ожидает в состоянии цикла, проверяя доступность блокировки.
	SpinWait	Предоставляет поддержку ожидания на основе прокруток.

Делегаты
  	Делегат	Описание
	ContextCallback	Представляет метод, вызываемый в новом контексте. 
	IOCompletionCallback	Получает код ошибки, количество байтов и тип перекрывающегося значения при завершении операции ввода-вывода в пуле потоков.
	ParameterizedThreadStart	Представляет метод, выполняющийся в объекте Thread.
	SendOrPostCallback	Указывает метод, вызываемый при отправке сообщения в контекст синхронизации. 
	ThreadExceptionEventHandler	Предоставляет метод, обрабатывающий событие ThreadExceptionApplication.
	ThreadStart	Представляет метод, выполняющийся в объекте Thread.
	TimerCallback	Представляет метод, обрабатывающий вызовы от события Timer.
	WaitCallback	Представляет метод обратного вызова, выполняющегося потоком из пула потоков.
	WaitOrTimerCallback	Представляет метод, который вызывается при получении объектом WaitHandle сигнала или истечении времени ожидания.

Перечисления
  	Перечисление	Описание
	ApartmentState	Задает апартаментное состояние потока Thread.
	EventResetMode	Указывает, сбрасывается ли EventWaitHandle автоматически или вручную после получения сигнала.
	LazyThreadSafetyMode	Задает способ синхронизации доступа в нескольких потоках экземпляром System.Lazy<T>.
	LockRecursionPolicy	Указывает, можно ли несколько раз войти в блокировку из одного и того же потока.
	ThreadPriority	Задает приоритет выполнения потока Thread.
	ThreadState	Задает состояния выполнения объекта Thread.